// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: operation.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GameProtocol {

  /// <summary>Holder for reflection information generated from operation.proto</summary>
  public static partial class OperationReflection {

    #region Descriptor
    /// <summary>File descriptor for operation.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OperationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9vcGVyYXRpb24ucHJvdG8SDEdhbWVQcm90b2NvbCKpAQoMT3BlcmF0aW9u",
            "S2V5EhYKDk9wZXJhdGlvbkluZGV4GAEgASgFEi8KB2tleVR5cGUYAiABKA4y",
            "Hi5HYW1lUHJvdG9jb2wuT3BlcmF0aW9uS2V5VHlwZRImCgdtb3ZlS2V5GAMg",
            "ASgLMhUuR2FtZVByb3RvY29sLk1vdmVLZXkSKAoIc2tpbGxLZXkYBCABKAsy",
            "Fi5HYW1lUHJvdG9jb2wuU2tpbGxLZXkiLgoHTW92ZUtleRINCgVrZXlJZBgB",
            "IAEoDRIJCgF4GAIgASgDEgkKAXoYAyABKAMiMQoIU2tpbGxLZXkSDwoHc2tp",
            "bGxJZBgBIAEoDRIJCgF4GAIgASgDEgkKAXoYAyABKAMqMQoQT3BlcmF0aW9u",
            "S2V5VHlwZRIICgROb25lEAASCAoETW92ZRABEgkKBVNraWxsEAJiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::GameProtocol.OperationKeyType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GameProtocol.OperationKey), global::GameProtocol.OperationKey.Parser, new[]{ "OperationIndex", "KeyType", "MoveKey", "SkillKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameProtocol.MoveKey), global::GameProtocol.MoveKey.Parser, new[]{ "KeyId", "X", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameProtocol.SkillKey), global::GameProtocol.SkillKey.Parser, new[]{ "SkillId", "X", "Z" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum OperationKeyType {
    [pbr::OriginalName("None")] None = 0,
    [pbr::OriginalName("Move")] Move = 1,
    [pbr::OriginalName("Skill")] Skill = 2,
  }

  #endregion

  #region Messages
  public sealed partial class OperationKey : pb::IMessage<OperationKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OperationKey> _parser = new pb::MessageParser<OperationKey>(() => new OperationKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OperationKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameProtocol.OperationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OperationKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OperationKey(OperationKey other) : this() {
      operationIndex_ = other.operationIndex_;
      keyType_ = other.keyType_;
      moveKey_ = other.moveKey_ != null ? other.moveKey_.Clone() : null;
      skillKey_ = other.skillKey_ != null ? other.skillKey_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OperationKey Clone() {
      return new OperationKey(this);
    }

    /// <summary>Field number for the "OperationIndex" field.</summary>
    public const int OperationIndexFieldNumber = 1;
    private int operationIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OperationIndex {
      get { return operationIndex_; }
      set {
        operationIndex_ = value;
      }
    }

    /// <summary>Field number for the "keyType" field.</summary>
    public const int KeyTypeFieldNumber = 2;
    private global::GameProtocol.OperationKeyType keyType_ = global::GameProtocol.OperationKeyType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameProtocol.OperationKeyType KeyType {
      get { return keyType_; }
      set {
        keyType_ = value;
      }
    }

    /// <summary>Field number for the "moveKey" field.</summary>
    public const int MoveKeyFieldNumber = 3;
    private global::GameProtocol.MoveKey moveKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameProtocol.MoveKey MoveKey {
      get { return moveKey_; }
      set {
        moveKey_ = value;
      }
    }

    /// <summary>Field number for the "skillKey" field.</summary>
    public const int SkillKeyFieldNumber = 4;
    private global::GameProtocol.SkillKey skillKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameProtocol.SkillKey SkillKey {
      get { return skillKey_; }
      set {
        skillKey_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OperationKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OperationKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OperationIndex != other.OperationIndex) return false;
      if (KeyType != other.KeyType) return false;
      if (!object.Equals(MoveKey, other.MoveKey)) return false;
      if (!object.Equals(SkillKey, other.SkillKey)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (OperationIndex != 0) hash ^= OperationIndex.GetHashCode();
      if (KeyType != global::GameProtocol.OperationKeyType.None) hash ^= KeyType.GetHashCode();
      if (moveKey_ != null) hash ^= MoveKey.GetHashCode();
      if (skillKey_ != null) hash ^= SkillKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OperationIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(OperationIndex);
      }
      if (KeyType != global::GameProtocol.OperationKeyType.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) KeyType);
      }
      if (moveKey_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MoveKey);
      }
      if (skillKey_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SkillKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OperationIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(OperationIndex);
      }
      if (KeyType != global::GameProtocol.OperationKeyType.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) KeyType);
      }
      if (moveKey_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MoveKey);
      }
      if (skillKey_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SkillKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (OperationIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OperationIndex);
      }
      if (KeyType != global::GameProtocol.OperationKeyType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) KeyType);
      }
      if (moveKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoveKey);
      }
      if (skillKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SkillKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OperationKey other) {
      if (other == null) {
        return;
      }
      if (other.OperationIndex != 0) {
        OperationIndex = other.OperationIndex;
      }
      if (other.KeyType != global::GameProtocol.OperationKeyType.None) {
        KeyType = other.KeyType;
      }
      if (other.moveKey_ != null) {
        if (moveKey_ == null) {
          MoveKey = new global::GameProtocol.MoveKey();
        }
        MoveKey.MergeFrom(other.MoveKey);
      }
      if (other.skillKey_ != null) {
        if (skillKey_ == null) {
          SkillKey = new global::GameProtocol.SkillKey();
        }
        SkillKey.MergeFrom(other.SkillKey);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OperationIndex = input.ReadInt32();
            break;
          }
          case 16: {
            KeyType = (global::GameProtocol.OperationKeyType) input.ReadEnum();
            break;
          }
          case 26: {
            if (moveKey_ == null) {
              MoveKey = new global::GameProtocol.MoveKey();
            }
            input.ReadMessage(MoveKey);
            break;
          }
          case 34: {
            if (skillKey_ == null) {
              SkillKey = new global::GameProtocol.SkillKey();
            }
            input.ReadMessage(SkillKey);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OperationIndex = input.ReadInt32();
            break;
          }
          case 16: {
            KeyType = (global::GameProtocol.OperationKeyType) input.ReadEnum();
            break;
          }
          case 26: {
            if (moveKey_ == null) {
              MoveKey = new global::GameProtocol.MoveKey();
            }
            input.ReadMessage(MoveKey);
            break;
          }
          case 34: {
            if (skillKey_ == null) {
              SkillKey = new global::GameProtocol.SkillKey();
            }
            input.ReadMessage(SkillKey);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MoveKey : pb::IMessage<MoveKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MoveKey> _parser = new pb::MessageParser<MoveKey>(() => new MoveKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MoveKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameProtocol.OperationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MoveKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MoveKey(MoveKey other) : this() {
      keyId_ = other.keyId_;
      x_ = other.x_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MoveKey Clone() {
      return new MoveKey(this);
    }

    /// <summary>Field number for the "keyId" field.</summary>
    public const int KeyIdFieldNumber = 1;
    private uint keyId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint KeyId {
      get { return keyId_; }
      set {
        keyId_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private long x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private long z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MoveKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MoveKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (KeyId != other.KeyId) return false;
      if (X != other.X) return false;
      if (Z != other.Z) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (KeyId != 0) hash ^= KeyId.GetHashCode();
      if (X != 0L) hash ^= X.GetHashCode();
      if (Z != 0L) hash ^= Z.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (KeyId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(KeyId);
      }
      if (X != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(X);
      }
      if (Z != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (KeyId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(KeyId);
      }
      if (X != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(X);
      }
      if (Z != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (KeyId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(KeyId);
      }
      if (X != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(X);
      }
      if (Z != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Z);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MoveKey other) {
      if (other == null) {
        return;
      }
      if (other.KeyId != 0) {
        KeyId = other.KeyId;
      }
      if (other.X != 0L) {
        X = other.X;
      }
      if (other.Z != 0L) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            KeyId = input.ReadUInt32();
            break;
          }
          case 16: {
            X = input.ReadInt64();
            break;
          }
          case 24: {
            Z = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            KeyId = input.ReadUInt32();
            break;
          }
          case 16: {
            X = input.ReadInt64();
            break;
          }
          case 24: {
            Z = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SkillKey : pb::IMessage<SkillKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SkillKey> _parser = new pb::MessageParser<SkillKey>(() => new SkillKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SkillKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameProtocol.OperationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillKey(SkillKey other) : this() {
      skillId_ = other.skillId_;
      x_ = other.x_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillKey Clone() {
      return new SkillKey(this);
    }

    /// <summary>Field number for the "skillId" field.</summary>
    public const int SkillIdFieldNumber = 1;
    private uint skillId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SkillId {
      get { return skillId_; }
      set {
        skillId_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private long x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private long z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SkillKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SkillKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SkillId != other.SkillId) return false;
      if (X != other.X) return false;
      if (Z != other.Z) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SkillId != 0) hash ^= SkillId.GetHashCode();
      if (X != 0L) hash ^= X.GetHashCode();
      if (Z != 0L) hash ^= Z.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SkillId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SkillId);
      }
      if (X != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(X);
      }
      if (Z != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SkillId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SkillId);
      }
      if (X != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(X);
      }
      if (Z != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SkillId);
      }
      if (X != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(X);
      }
      if (Z != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Z);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SkillKey other) {
      if (other == null) {
        return;
      }
      if (other.SkillId != 0) {
        SkillId = other.SkillId;
      }
      if (other.X != 0L) {
        X = other.X;
      }
      if (other.Z != 0L) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SkillId = input.ReadUInt32();
            break;
          }
          case 16: {
            X = input.ReadInt64();
            break;
          }
          case 24: {
            Z = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SkillId = input.ReadUInt32();
            break;
          }
          case 16: {
            X = input.ReadInt64();
            break;
          }
          case 24: {
            Z = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
